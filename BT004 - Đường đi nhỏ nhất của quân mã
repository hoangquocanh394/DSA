#include<bits/stdc++.h>
using namespace std;
int x[8]={-1,1,2,2,1,-1,-2,-2};
int y[8]={-2,-2,-1,1,2,2,1,-1};
int n;
int a[100][100],dp[100][100];
void solve(int x1,int y1,int x2,int y2){
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			dp[i][j]=INT_MAX;
		}
	}
	priority_queue<tuple<int,int,int>,vector<tuple<int,int,int>>,greater<tuple<int,int,int>>> p;
	dp[x1][y1]=a[x1][y1];
	p.push(make_tuple(dp[x1][y1],x1,y1));
	while(!p.empty()){
		tuple<int,int,int> k=p.top();
		p.pop();
		int x3=get<1>(k);
		int y3=get<2>(k);
		int cost=get<0>(k);
		if(x3==x2 && y3==y2){
			cout << cost << endl;
			break;
		}
		for(int i=0;i<8;i++){
			int nx=x3+x[i];
			int ny=y3+y[i];
			if(nx>=0 && nx<n && ny>=0 && ny<n){
				if(dp[nx][ny]>cost+a[nx][ny]){
					dp[nx][ny]=cost+a[nx][ny];
					p.push(make_tuple(dp[nx][ny],nx,ny));
				}			
			}
		}
	}
	if(dp[x2][y2]==INT_MAX){
		cout << "-1" << endl;
	}
}
int main(){
	int t;
	cin >> t;
	while(t--){
		cin >> n;
		for(int i=0;i<n;i++){
			for(int j=0;j<n;j++){
				cin >> a[i][j];
			}
		}
		int x1,y1,x2,y2;
		cin >> x1 >> y1 >> x2 >> y2;
		solve(x1-1,y1-1,x2-1,y2-1);
	}
	return 0;
}
